/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { Component, Input, Host, Inject, forwardRef, NgZone } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { AngularDropdownDirective } from './angular-dropdown.directive';
import { closest, waitForAnimation } from './utils';
/** @type {?} */
var MutationObserver = ((/** @type {?} */ (window))).MutationObserver;
var AngularDropdownContentComponent = /** @class */ (function () {
    function AngularDropdownContentComponent(dropdown, zone, document) {
        var _this = this;
        this.dropdown = dropdown;
        this.zone = zone;
        this.dropdownClass = '';
        this.overlay = false;
        this.hasMoved = false;
        this._animationClass = null;
        this.isTouchDevice = 'ontouchstart' in window;
        this.mutationObserver = null;
        this.destroy$ = new Subject();
        this.transitioningInClass = 'ng-dropdown-content--transitioning-in';
        this.transitionedInClass = 'ng-dropdown-content--transitioned-in';
        this.transitioningOutClass = 'ng-dropdown-content--transitioning-out';
        this.shouldOpen = false;
        this.repositionInZone = function () {
            return _this.zone.run(function () { return _this.dropdown.reposition(); });
        };
        this.handleRootMouseDown = function (e) {
            var target = (/** @type {?} */ (e)).target;
            if (_this.hasMoved ||
                (_this.dropdownElement !== null &&
                    _this.dropdownElement.contains(target)) ||
                (_this.triggerElement !== null && _this.triggerElement.contains(target))) {
                _this.hasMoved = false;
                return;
            }
            /** @type {?} */
            var closestDropdown = closest(target, 'ng-dropdown-content');
            if (closestDropdown !== null) {
                /** @type {?} */
                var trigger = _this.document.querySelector("[aria-controls=" + closestDropdown.getAttribute('id') + "]");
                /** @type {?} */
                var parentDropdown = closest((/** @type {?} */ (trigger)), 'ng-dropdown-content');
                if (parentDropdown !== null &&
                    parentDropdown.getAttribute('id') === _this.dropdown.dropdownId) {
                    _this.hasMoved = false;
                    return;
                }
            }
            _this.dropdown.close(true);
        };
        this.touchStartHandler = function (e) {
            _this.document.body.addEventListener('touchmove', _this.touchMoveHandler, true);
        };
        this.touchMoveHandler = function (e) {
            _this.hasMoved = true;
            _this.document.body.removeEventListener('touchmove', _this.touchMoveHandler, true);
        };
        this.document = document;
    }
    Object.defineProperty(AngularDropdownContentComponent.prototype, "dropdownElement", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dropdown.dropdownElement;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dropdown.onOpen
            .pipe(takeUntil(this.destroy$))
            .subscribe(function () { return (_this.shouldOpen = true); });
        this.dropdown.onClose
            .pipe(takeUntil(this.destroy$))
            .subscribe(function () { return _this.close(); });
    };
    Object.defineProperty(AngularDropdownContentComponent.prototype, "animationClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._animationClass;
        },
        set: /**
         * @param {?} className
         * @return {?}
         */
        function (className) {
            if (this.dropdownElement !== null) {
                if (this._animationClass && className !== this._animationClass) {
                    this.dropdownElement.classList.remove(this._animationClass);
                }
                else if (className) {
                    this.dropdownElement.classList.add(className);
                }
            }
            this._animationClass = className;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AngularDropdownContentComponent.prototype, "triggerElement", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dropdown.triggerElement;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.shouldOpen) {
            this.animationClass = this.transitioningInClass;
            requestAnimationFrame(function () { return _this.open(); });
            this.shouldOpen = false;
        }
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroy$.next();
        this.teardownEvents();
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.open = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.document.body.addEventListener('mousedown', this.handleRootMouseDown, true);
        if (this.isTouchDevice) {
            this.document.body.addEventListener('touchstart', this.touchStartHandler, true);
            this.document.body.addEventListener('touchend', this.handleRootMouseDown, true);
        }
        /** @type {?} */
        var changes = this.dropdown.reposition();
        if (!this.dropdown.renderInPlace) {
            this.addGlobalEvents();
            this.startObservingDomMutations();
        }
        else if (changes !== null && changes.vPosition === 'above') {
            this.startObservingDomMutations();
        }
        requestAnimationFrame(function () { return _this.animateIn(); });
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.teardownEvents();
        this.animateOut();
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.animateIn = /**
     * @return {?}
     */
    function () {
        var _this = this;
        waitForAnimation(this.dropdownElement, function () {
            _this.animationClass = _this.transitionedInClass;
        });
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.animateOut = /**
     * @return {?}
     */
    function () {
        if (this.dropdownElement === null) {
            return;
        }
        /** @type {?} */
        var parentElement = this.dropdown.renderInPlace
            ? (/** @type {?} */ ((/** @type {?} */ (this.dropdownElement.parentElement)).parentElement))
            : (/** @type {?} */ (this.dropdownElement.parentElement));
        /** @type {?} */
        var clone = (/** @type {?} */ (this.dropdownElement.cloneNode(true)));
        clone.id = this.dropdownElement.id + "--clone";
        clone.classList.remove(this.transitionedInClass);
        clone.classList.remove(this.transitioningInClass);
        clone.classList.add(this.transitioningOutClass);
        parentElement.appendChild(clone);
        this.animationClass = this.transitioningInClass;
        waitForAnimation(clone, function () { return parentElement.removeChild(clone); });
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.startObservingDomMutations = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (MutationObserver !== undefined) {
            this.mutationObserver = new MutationObserver(function (mutations) {
                if (mutations[0].addedNodes.length ||
                    mutations[0].removedNodes.length) {
                    _this.repositionInZone();
                }
            });
            (/** @type {?} */ (this.mutationObserver)).observe((/** @type {?} */ (this.dropdownElement)), {
                childList: true,
                subtree: true
            });
        }
        else {
            (/** @type {?} */ (this.dropdownElement)).addEventListener('DOMNodeInserted', this.repositionInZone, false);
            (/** @type {?} */ (this.dropdownElement)).addEventListener('DOMNodeRemoved', this.repositionInZone, false);
        }
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.stopObservingDomMutations = /**
     * @return {?}
     */
    function () {
        if (MutationObserver) {
            if (this.mutationObserver) {
                this.mutationObserver.disconnect();
                this.mutationObserver = null;
            }
        }
        else {
            if (this.dropdownElement !== null) {
                this.dropdownElement.removeEventListener('DOMNodeInserted', this.repositionInZone);
                this.dropdownElement.removeEventListener('DOMNodeRemoved', this.repositionInZone);
            }
        }
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.addGlobalEvents = /**
     * @return {?}
     */
    function () {
        window.addEventListener('scroll', this.repositionInZone);
        window.addEventListener('resize', this.repositionInZone);
        window.addEventListener('orientationchange', this.repositionInZone);
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.removeGlobalEvents = /**
     * @return {?}
     */
    function () {
        window.removeEventListener('scroll', this.repositionInZone);
        window.removeEventListener('resize', this.repositionInZone);
        window.removeEventListener('orientationchange', this.repositionInZone);
    };
    /**
     * @return {?}
     */
    AngularDropdownContentComponent.prototype.teardownEvents = /**
     * @return {?}
     */
    function () {
        this.removeGlobalEvents();
        this.stopObservingDomMutations();
        this.document.body.removeEventListener('mousedown', this.handleRootMouseDown, true);
        if (this.isTouchDevice) {
            this.document.body.removeEventListener('touchstart', this.touchStartHandler, true);
            this.document.body.removeEventListener('touchend', this.handleRootMouseDown, true);
        }
    };
    AngularDropdownContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-dropdown-content,[ng-dropdown-content],[ngDropdownContent]',
                    template: "<ng-container *ngIf=\"dropdown.isOpen$ | async as isOpen\">\n  <ng-container *ngWormhole=\"'#ng-dropdown-outlet'; renderInPlace: dropdown.renderInPlace\">\n    <div *ngIf=\"overlay && isOpen\" class=\"ng-dropdown-overlay\"></div>\n    <div [id]=\"dropdown.dropdownId\"\n        class=\"ng-dropdown-content {{dropdownClass}}\"\n        [style.top]=\"(dropdown.position$ | async)?.top\"\n        [style.right]=\"(dropdown.position$ | async)?.right\"\n        [style.bottom]=\"(dropdown.position$ | async)?.bottom\"\n        [style.left]=\"(dropdown.position$ | async)?.left\"\n        [class.render-in-place]=\"dropdown.renderInPlace\"\n        [class.ng-dropdown-content--above]=\"(dropdown.position$ | async)?.vPosition === 'above'\"\n        [class.ng-dropdown-content--below]=\"(dropdown.position$ | async)?.vPosition === 'below'\"\n        [class.ng-dropdown-content--right]=\"(dropdown.position$ | async)?.hPosition === 'right'\"\n        [class.ng-dropdown-content--center]=\"(dropdown.position$ | async)?.hPosition === 'center'\"\n        [class.ng-dropdown-content--left]=\"(dropdown.position$ | async)?.hPosition === 'left'\">\n      <ng-content></ng-content>\n    </div>\n  </ng-container>\n  <div *ngIf=\"!isOpen\" [id]=\"dropdown.dropdownId\" class=\"ng-dropdown-placeholder\"></div>\n</ng-container>\n",
                    host: {
                        '[class.render-in-place]': 'dropdown.renderInPlace'
                    },
                    styles: [":host{display:none}:host.render-in-place{display:block;position:absolute}"]
                }] }
    ];
    AngularDropdownContentComponent.ctorParameters = function () { return [
        { type: AngularDropdownDirective, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return AngularDropdownDirective; }),] }] },
        { type: NgZone },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    AngularDropdownContentComponent.propDecorators = {
        dropdownClass: [{ type: Input }],
        overlay: [{ type: Input }],
        transitioningInClass: [{ type: Input }],
        transitionedInClass: [{ type: Input }],
        transitioningOutClass: [{ type: Input }]
    };
    return AngularDropdownContentComponent;
}());
export { AngularDropdownContentComponent };
if (false) {
    /** @type {?} */
    AngularDropdownContentComponent.prototype.dropdownClass;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.overlay;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.hasMoved;
    /** @type {?} */
    AngularDropdownContentComponent.prototype._animationClass;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.isTouchDevice;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.mutationObserver;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.destroy$;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.transitioningInClass;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.transitionedInClass;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.transitioningOutClass;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.shouldOpen;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.document;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.repositionInZone;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.handleRootMouseDown;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.touchStartHandler;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.touchMoveHandler;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.dropdown;
    /** @type {?} */
    AngularDropdownContentComponent.prototype.zone;
}
//# sourceMappingURL=data:application/json;base64,