/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Inject, forwardRef, Host, HostListener } from '@angular/core';
import { AngularDropdownDirective } from './angular-dropdown.directive';
var AngularDropdownControlDirective = /** @class */ (function () {
    function AngularDropdownControlDirective(dropdown, element) {
        this.dropdown = dropdown;
        this.element = element;
        this.isDropdownOpen = false;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    AngularDropdownControlDirective.prototype.onClick = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.stopPropagation();
        if (!this.dropdown.disabled) {
            this.dropdown.toggle();
        }
    };
    /**
     * @return {?}
     */
    AngularDropdownControlDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dropdownStateSubscription = this.dropdown.isOpen$.subscribe(function (isOpen) { return (_this.isDropdownOpen = isOpen); });
    };
    /**
     * @return {?}
     */
    AngularDropdownControlDirective.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.dropdownStateSubscription && this.dropdownStateSubscription.unsubscribe();
    };
    AngularDropdownControlDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ng-dropdown-control],[ngDropdownControl]',
                    host: {
                        '[attr.aria-haspopup]': 'true',
                        '[attr.aria-controls]': 'dropdown.id',
                        '[attr.aria-expanded]': 'isDropdownOpen',
                        '[class.ng-dropdown-control]': 'true',
                        '[class.active]': 'isDropdownOpen'
                    }
                },] }
    ];
    AngularDropdownControlDirective.ctorParameters = function () { return [
        { type: AngularDropdownDirective, decorators: [{ type: Host }, { type: Inject, args: [forwardRef(function () { return AngularDropdownDirective; }),] }] },
        { type: ElementRef }
    ]; };
    AngularDropdownControlDirective.propDecorators = {
        onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
    };
    return AngularDropdownControlDirective;
}());
export { AngularDropdownControlDirective };
if (false) {
    /** @type {?} */
    AngularDropdownControlDirective.prototype.isDropdownOpen;
    /** @type {?} */
    AngularDropdownControlDirective.prototype.dropdownStateSubscription;
    /** @type {?} */
    AngularDropdownControlDirective.prototype.dropdown;
    /** @type {?} */
    AngularDropdownControlDirective.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1kcm9wZG93bi1jb250cm9sLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItZHJvcGRvd24vIiwic291cmNlcyI6WyJsaWIvYW5ndWxhci1kcm9wZG93bi1jb250cm9sLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxVQUFVLEVBQ1YsTUFBTSxFQUNOLFVBQVUsRUFFVixJQUFJLEVBQ0osWUFBWSxFQUNiLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUM1Qiw4QkFBOEIsQ0FBQztBQUd0QztJQXVCRSx5Q0FHVyxRQUFrQyxFQUNsQyxPQUFtQjtRQURuQixhQUFRLEdBQVIsUUFBUSxDQUEwQjtRQUNsQyxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBaEI5QixtQkFBYyxHQUFZLEtBQUssQ0FBQztJQWlCaEMsQ0FBQzs7Ozs7SUFiRCxpREFBTzs7OztJQURQLFVBQ1EsQ0FBUTtRQUNkLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUVwQixJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUN4QjtJQUNILENBQUM7Ozs7SUFTRCxrREFBUTs7O0lBQVI7UUFBQSxpQkFJQztRQUhDLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQzlELFVBQUEsTUFBTSxJQUFJLE9BQUEsQ0FBQyxLQUFJLENBQUMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxFQUE5QixDQUE4QixDQUN6QyxDQUFDO0lBQ0osQ0FBQzs7OztJQUVELHFEQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyx5QkFBeUIsSUFBSSxJQUFJLENBQUMseUJBQXlCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDakYsQ0FBQzs7Z0JBdENGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsMkNBQTJDO29CQUNyRCxJQUFJLEVBQUU7d0JBQ0osc0JBQXNCLEVBQUUsTUFBTTt3QkFDOUIsc0JBQXNCLEVBQUUsYUFBYTt3QkFDckMsc0JBQXNCLEVBQUUsZ0JBQWdCO3dCQUN4Qyw2QkFBNkIsRUFBRSxNQUFNO3dCQUNyQyxnQkFBZ0IsRUFBRSxnQkFBZ0I7cUJBQ25DO2lCQUNGOzs7Z0JBYlEsd0JBQXdCLHVCQTRCMUIsSUFBSSxZQUNKLE1BQU0sU0FBQyxVQUFVLENBQUMsY0FBTSxPQUFBLHdCQUF3QixFQUF4QixDQUF3QixDQUFDO2dCQXJDdEQsVUFBVTs7OzBCQTBCVCxZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUUsUUFBUSxDQUFFOztJQXlCckMsc0NBQUM7Q0FBQSxBQXZDRCxJQXVDQztTQTdCWSwrQkFBK0I7OztJQUMxQyx5REFBZ0M7O0lBQ2hDLG9FQUF5Qzs7SUFZckMsbURBRXlDOztJQUN6QyxrREFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEVsZW1lbnRSZWYsXG4gIEluamVjdCxcbiAgZm9yd2FyZFJlZixcbiAgSW5wdXQsXG4gIEhvc3QsXG4gIEhvc3RMaXN0ZW5lclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQW5ndWxhckRyb3Bkb3duRGlyZWN0aXZlIH1cbiAgZnJvbSAnLi9hbmd1bGFyLWRyb3Bkb3duLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW25nLWRyb3Bkb3duLWNvbnRyb2xdLFtuZ0Ryb3Bkb3duQ29udHJvbF0nLFxuICBob3N0OiB7XG4gICAgJ1thdHRyLmFyaWEtaGFzcG9wdXBdJzogJ3RydWUnLFxuICAgICdbYXR0ci5hcmlhLWNvbnRyb2xzXSc6ICdkcm9wZG93bi5pZCcsXG4gICAgJ1thdHRyLmFyaWEtZXhwYW5kZWRdJzogJ2lzRHJvcGRvd25PcGVuJyxcbiAgICAnW2NsYXNzLm5nLWRyb3Bkb3duLWNvbnRyb2xdJzogJ3RydWUnLFxuICAgICdbY2xhc3MuYWN0aXZlXSc6ICdpc0Ryb3Bkb3duT3BlbidcbiAgfVxufSlcbmV4cG9ydCBjbGFzcyBBbmd1bGFyRHJvcGRvd25Db250cm9sRGlyZWN0aXZlIHtcbiAgaXNEcm9wZG93bk9wZW46IGJvb2xlYW4gPSBmYWxzZTtcbiAgZHJvcGRvd25TdGF0ZVN1YnNjcmlwdGlvbj86IFN1YnNjcmlwdGlvbjtcblxuICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsgJyRldmVudCcgXSlcbiAgb25DbGljayhlOiBFdmVudCk6IHZvaWQge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBpZiAoIXRoaXMuZHJvcGRvd24uZGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuZHJvcGRvd24udG9nZ2xlKCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgICBASG9zdCgpXG4gICAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gQW5ndWxhckRyb3Bkb3duRGlyZWN0aXZlKSlcbiAgICAgIHB1YmxpYyBkcm9wZG93bjogQW5ndWxhckRyb3Bkb3duRGlyZWN0aXZlLFxuICAgICAgcHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWYpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZHJvcGRvd25TdGF0ZVN1YnNjcmlwdGlvbiA9IHRoaXMuZHJvcGRvd24uaXNPcGVuJC5zdWJzY3JpYmUoXG4gICAgICBpc09wZW4gPT4gKHRoaXMuaXNEcm9wZG93bk9wZW4gPSBpc09wZW4pXG4gICAgKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCl7XG4gICAgdGhpcy5kcm9wZG93blN0YXRlU3Vic2NyaXB0aW9uICYmIHRoaXMuZHJvcGRvd25TdGF0ZVN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=