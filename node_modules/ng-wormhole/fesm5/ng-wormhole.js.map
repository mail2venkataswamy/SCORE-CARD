{"version":3,"file":"ng-wormhole.js.map","sources":["ng://ng-wormhole/lib/ng-wormhole.directive.ts","ng://ng-wormhole/lib/ng-wormhole.module.ts"],"sourcesContent":["import {\n  Directive,\n  Input,\n  ViewContainerRef,\n  TemplateRef,\n  EmbeddedViewRef,\n  AfterViewInit,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  HostBinding,\n  Inject,\n  OnDestroy\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nfunction appendReducer<T extends Node>(target: T, node: Node): T {\n  target.appendChild(node);\n\n  return target;\n}\n\n@Directive({\n  selector: '[ngWormhole]' // tslint:disable-line\n})\nexport class NgWormholeDirective\n  implements AfterViewInit, OnInit, OnChanges, OnDestroy {\n  @Input()\n  ngWormholeRenderInPlace = false;\n\n  @Input()\n  ngWormhole: string | Element;\n\n  private embeddedViewRef: EmbeddedViewRef<any>;\n  private initialized = false;\n  private document: Document;\n\n  constructor(\n    private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    @Inject(DOCUMENT) document: any\n  ) {\n    this.document = document;\n  }\n\n  get destinationElement(): Element | null {\n    if (this.ngWormholeRenderInPlace) {\n      return (\n        this.viewContainerRef.element &&\n        this.viewContainerRef.element.nativeElement\n      );\n    }\n\n    if (!this.ngWormhole) {\n      return null;\n    }\n\n    return typeof this.ngWormhole === 'string'\n      ? this.document.querySelector(this.ngWormhole)\n      : this.ngWormhole;\n  }\n\n  ngOnInit(): void {\n    this.embeddedViewRef = this.viewContainerRef.createEmbeddedView(\n      this.templateRef\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.appendToDestination();\n    this.initialized = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.initialized) {\n      this.appendToDestination();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.embeddedViewRef != null) {\n      this.embeddedViewRef.destroy();\n    }\n  }\n\n  private appendToDestination(): void {\n    let startingActiveElement = this.getActiveElement();\n    let destinationElement = this.destinationElement;\n\n    if (destinationElement == null) {\n      return;\n    }\n\n    let content = this.embeddedViewRef.rootNodes.reduce(\n      appendReducer,\n      this.document.createDocumentFragment()\n    );\n    if (destinationElement.nodeType === Node.COMMENT_NODE) {\n      destinationElement.parentNode.insertBefore(\n        content,\n        destinationElement.nextSibling\n      );\n    } else {\n      destinationElement.appendChild(content);\n    }\n\n    let resultingActiveElement = this.getActiveElement();\n    if (\n      startingActiveElement != null &&\n      resultingActiveElement !== startingActiveElement\n    ) {\n      (startingActiveElement as HTMLElement).focus();\n    }\n  }\n\n  private getActiveElement(): Element {\n    return this.document.activeElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgWormholeDirective } from './ng-wormhole.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [NgWormholeDirective],\n  exports: [NgWormholeDirective]\n})\nexport class NgWormholeModule {}\n"],"names":[],"mappings":";;;;;;;AAAA;;;;;;AAgBA,uBAAuC,MAAS,EAAE,IAAU;IAC1D,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAEzB,OAAO,MAAM,CAAC;CACf;;IAiBC,6BACU,kBACA,aACU,QAAa;QAFvB,qBAAgB,GAAhB,gBAAgB;QAChB,gBAAW,GAAX,WAAW;uCAXK,KAAK;2BAMT,KAAK;QAQzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAED,sBAAI,mDAAkB;;;;QAAtB;YACE,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBAChC,QACE,IAAI,CAAC,gBAAgB,CAAC,OAAO;oBAC7B,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,EAC3C;aACH;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,OAAO,IAAI,CAAC;aACb;YAED,OAAO,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ;kBACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;kBAC5C,IAAI,CAAC,UAAU,CAAC;SACrB;;;OAAA;;;;IAED,sCAAQ;;;IAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC7D,IAAI,CAAC,WAAW,CACjB,CAAC;KACH;;;;IAED,6CAAe;;;IAAf;QACE,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;;;;;IAED,yCAAW;;;;IAAX,UAAY,OAAsB;QAChC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;KACF;;;;IAED,yCAAW;;;IAAX;QACE,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;YAChC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SAChC;KACF;;;;IAEO,iDAAmB;;;;;QACzB,IAAI,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;;QACpD,IAAI,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAEjD,IAAI,kBAAkB,IAAI,IAAI,EAAE;YAC9B,OAAO;SACR;;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,CACjD,aAAa,EACb,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CACvC,CAAC;QACF,IAAI,kBAAkB,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,EAAE;YACrD,kBAAkB,CAAC,UAAU,CAAC,YAAY,CACxC,OAAO,EACP,kBAAkB,CAAC,WAAW,CAC/B,CAAC;SACH;aAAM;YACL,kBAAkB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SACzC;;QAED,IAAI,sBAAsB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACrD,IACE,qBAAqB,IAAI,IAAI;YAC7B,sBAAsB,KAAK,qBAC7B,EAAE;YACA,mBAAC,qBAAoC,GAAE,KAAK,EAAE,CAAC;SAChD;;;;;IAGK,8CAAgB;;;;QACtB,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;;;gBA9FtC,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;iBACzB;;;;gBArBC,gBAAgB;gBAChB,WAAW;gDAoCR,MAAM,SAAC,QAAQ;;;0CAbjB,KAAK;6BAGL,KAAK;;8BA9BR;;;;;;;ACAA;;;;gBAGC,QAAQ,SAAC;oBACR,OAAO,EAAE,EAAE;oBACX,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBAC/B;;2BAPD;;;;;;;;;;;;;;;"}
